#ifdef ESP32
#include <WiFi.h>
#include <AsyncTCP.h>
#else
#include <ESP8266WiFi.h>
#include <ESPAsyncTCP.h>
#endif
#include <ESPAsyncWebServer.h>
#include <FS.h>
#include <DHT.h>
#define readADC A0
#define motor D5
#define LEDPin D1
#define waterl D2//

#define DHTPIN 27
#define DHTTYPE    DHT22  
AsyncWebServer server(80);

// REPLACE WITH YOUR NETWORK CREDENTIALS
const char* ssid = "AndroidAP";
const char* password = "oeha2193";
int inputMessage;
int flag = 0;
int r;
int analog;
DHT dht(DHTPIN, DHTTYPE);

const char* PARAM_INPUT_1 = "input1";
const char* PARAM_INPUT_2 = "input2";
const char* PARAM_INPUT_3 = "input3";
int flag1;


String readsoilm() {
float v = analogRead(readADC);
float y = (analogRead(readADC)/10.24);
float t = (100-y)+15;
//float o;
//if(t==0)
//{
//  o=0;
//  }
//  else if(t>35 && t<55)
//  {
//    o=50;
//  }
//  else if(t>60 && t < 70)
//  {
//    o=95;
//  }
//  else if(t>69 && t <85)
//  {
//    o=100;
//  }
//  

if(isnan(v)){
Serial.println("Failed to read from soil moisture sensor!");
return "â€“";

} else {
     if(v>300 && v<=600){
        flag = 1;
    }
    else if(v>600 &&v<=750){
        flag = 2;
    } 
    else if(v>750 && v<=950){
        flag = 3;
    }
    else if(v>950 && v<=1024)
    {
        flag = 4;
    }
Serial.println(t);
return String(t);
}
}
// HTML web page to handle 3 input fields (input1, input2, input3)
const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IOT Project</title>
    <style>
        * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body{
    background-color: #eee;
    /* display: flex; */
}

main{
    width: 100%;
    height: 100vh;
    margin: 0px auto;
    /* border: 2px solid red; */
    /* padding-bottom: 40px; */
}

.container {
    display: flex;
    justify-content: left;
    align-items: center;
    /* grid-template-columns: auto auto auto; */
    background-color: hsl(173, 58%, 39%);
    padding: 5px;
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    width: 100%;
    /* height: 10%; */
}

.title_icon {
    display: inline-block;  
    width: 50px;
    height: 50px;
    transform: translateX(20%);
    padding: 3px;
    margin: 5px;
}

.title_icon img, .title_icon_w img, .title_icon_we img {
    width: 100%;
    height: 100%;
}

.title_icon_w, .title_icon_we{
    display: inline-block;  
    width: 50px;
    height: 50px;
    /* transform: translateX(20%); */
    padding: 5px;
    /* margin: 5px; */
}

.title {
    margin: 25px;
    font-size: 1.2rem;
    letter-spacing: .5rem;
    color: #fff;
    width: 80%;
    min-width: 200px;
    font-weight: 600;
    display: inline-block;
}

@media (max-width: 589px) {
    .title{
        text-align: center;
    }
}

.sm{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    row-gap: 10px;
    background-color:#C4E7D4;
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    width: 300px;
    margin: auto 20px;
    padding: 20px;
    height: 90%;
    border-radius: 15px;  
}

.sm_title{
    letter-spacing:2px;
    /* padding: 10px; */
    width: 100%;
    text-align: center;
}

.sm .data{  
    padding: 7px;
    background-color:#eee;
    border-radius: 10px;
    width: 40%;
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    text-align: center;
}

.boxes {
    width: 100%;
    display: grid;
    grid-template-columns: auto auto auto;
    justify-content: center;
    grid-gap: 20px;
    margin-top: 50px;
    margin-bottom: 50px;
}

@media (max-width: 925px) {
    .boxes{
        grid-template-columns: auto;
        grid-gap: 1px;
    }

    .weather{
        height: 200%;
        width: 20%;
        margin: 5px;
        padding: 30px;
    }
}

.box_left{
    display: flex;
    flex-direction: column;
    padding: 20px;
    margin: auto 20px;
    text-align: center;
    background-color: #C4E7D4;
    letter-spacing: 2px;
    width: 300px;
    row-gap: 5px;
    height: 90%;
    font-size: 1.1rem;
    justify-content: center;
    align-items: center;
    border-radius:20px;
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    font-weight: 600;
}

.box_left p{
    padding: 10px;
}

.weather{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    row-gap: 10px;
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    width: 90%;
    margin: auto 15px;
    padding: 40px;
    align-self: center;
    height: 85%;
    border-radius: 15px; 
    background-color: #2a9d8f; 
}

#text{
    padding: 10px;
    border-radius: 5px;
    /* color: #C4E7D4; */
    outline: none;
    border: none;
}

.weather button{
    padding: 8px;
    display: inline-block;
    font-size: 15px;
    border-radius: 10px;
    border: none;
    background-color:#9ADA8E;
    color: black;
    cursor: pointer;
    transition: all 0.5s ease;
}

.weather button:hover{
    background-color: aquamarine;
}

.humidity, .temp{
    color: #C4E7D4;
    font-size: 18px;
}

#data_h, #data_t{
    display: inline-block;
}

.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
    margin: 20px;
}

/* Hide default HTML checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #DA8E8E;
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked+.slider {
    background-color: #9ADA8E;
}

input:focus+.slider {
    box-shadow: 0 0 1px #9ADA8E;
}

input:checked+.slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}

.btn{
    padding: 5px;
    margin: 10px auto;
    background-color:#DA8E8E;
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    border: none;
    padding: 5px;
    width: 50%;
    color: white;
    border-radius: 20px;
    cursor: pointer;
}

.btn_selection{
    width: 50%;
    justify-content: center;
    margin: 0px auto;
    /* transform: translateY(10%); */
}

.box_bottom{
    height: 100%;
    padding: 25px;
    text-align: center;
    background-color: #C4E7D4;
    letter-spacing: 2px;
    margin: 20px auto;
    width: 85%;
    font-size: 19px;
    border-radius:20px;
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    font-weight: 600;
}

.box_bottom .inside{
    display: grid;
    grid-template-columns: auto auto auto;
    margin-top: 15px;
    width: 90%;
    /* min-width: 220px; */
    margin: 20px auto;
}

@media (max-width: 773px){
    .box_bottom .inside{
        grid-template-columns: auto;
        align-items: center;
        justify-content: center;
    }
}

.btnn{
    display: flex;
    flex-direction: column;
    /* column-gap: 10px; */
    width: 75px;
    text-align: center;
    align-items: center;
    padding: 10px;
    align-content: center;
    margin: 0px auto;
    cursor: pointer;
    margin-top: 10px;
    background-color: #e1faf4;
    border: none;
    border-radius: 10px;
    /* column-gap: 5px; */
    box-shadow: 0 5px 10px rgba(10, 10, 10, 0.2);
    cursor: pointer;
}

.btnn img{
    width: 35px;
    height: 35px;
}

.btnn input{
    background: transparent;
    border: none;
    margin-top: 5px;
}

@media (max-width: 350px) {
    .box_left, .weather, .sm, .btn_selection{
        width: 200px;
    }
}

.tempo{
    color: #eee;
    margin: 30px;
}
    </style>
</head>

<body>
    <main>
        <div class="container">
            <div class="title_icon">
                <img src="https://cdn-icons-png.flaticon.com/512/2713/2713479.png" alt="Icons">
            </div>
            <div class="title">SMART IRRIGATION SYSTEM</div>
        </div>

        <div class="boxes">
            <div class="box_left">
                <div class="title_icon_w">
                    <img src="https://cdn-icons-png.flaticon.com/512/2983/2983881.png" alt="">
                </div>
                <p>Waterpump indicator</p>
                <div class="s1">
                    <label class="switch">
                        <a href="/auto/on" ><input type="checkbox" id="s1"></a>
                        <span class="slider round"></span>
                    </label>
                </div>
                <button class="btn" onclick="uncheck()">Manual OFF</button>
            </div>

            <div class="weather">
                <div class="title_icon_w">
                    <img src="https://cdn-icons-png.flaticon.com/512/2932/2932445.png" alt="Soil moisture icon">
                </div>
                <div class="sm_title"><h3>Weather</h3></div>
                <input type="text" placeholder="Enter city" id="text">
                <button type="button" onclick="myFunction()">Get Info</button>
                <div class="humidity"> Humidity : <p id="data_h"></p>
                </div>
                <div class="temp">
                Temperature : <p id="data_t"></p>
            </div>
            </div>

            <div class="sm">
                <div class="title_icon_w">
                    <img src="https://cdn-icons-png.flaticon.com/512/6691/6691853.png" alt="Soil moisture icon">
                </div>
                <div class="sm_title"><h3>Soil moisture</h3></div>
                <div class="data" id="moisture">%SOIL%
                <sup class="units">%</sup></div>
             
            </div>

        </div>
        


        <div class="btn_selection">
            <div class="box_bottom">
                Crop selection
                <div class="inside">
                   <form action="/get">
                            <div class="btnn" id="btn1" onclick="wheat()">
                            <input type="hidden" name="input1">
                            <input type="submit" value="Wheat">
                            </div>
                      </form>
                      <form action="/get">
                        <div class="btnn" id="btn2" onclick="peanut()">  
                            <input type="hidden" name="input2">
                            <input type="submit" value="Peanut" >
                           </div>
                      </form>
                      <form action="/get">
                        <div class="btnn" id="btn3" onclick="cotton()">
                            <input type="hidden" name="input3">
                            <input type="submit" value="Cotton" >
                       </div>
                      </form>
                      </div> 
            </div>
            </div>
        </div>
        <div class="tempo">hlkjhgf</div>
    </main>

    <script>
        function uncheck(){
            var s1= document.getElementById('s1');
            s1.checked = false;
        }

        function cotton(){
            document.getElementById('btn3').style.backgroundColor = "#2A9D8F";
            document.getElementById('btn1').style.backgroundColor = "#e1faf4";
            document.getElementById('btn2').style.backgroundColor = "#e1faf4";
        }
        function wheat(){
            document.getElementById('btn2').style.backgroundColor = "#e1faf4";
            document.getElementById('btn1').style.backgroundColor = "#2A9D8F";
            document.getElementById('btn3').style.backgroundColor = "#e1faf4";
        }
        function peanut(){
            document.getElementById('btn1').style.backgroundColor = "#e1faf4";
            document.getElementById('btn3').style.backgroundColor = "#e1faf4";
            document.getElementById('btn2').style.backgroundColor = "#2A9D8F";
        }

//        window.onload = function() {
//            window.addEventListener('load', uncheck, true);
//      }
      
      // Code for weather api
      
        function myFunction(){
            
            const city = document.getElementById('text').value;
      
            const options = {
                method: 'GET',
                headers: {
                    'X-RapidAPI-Key': '4735b294d1msh9ddcdd592579c61p1f462fjsnd101b4ed81ff',
                    'X-RapidAPI-Host': 'open-weather13.p.rapidapi.com'
                }
            };
            
            fetch('https://open-weather13.p.rapidapi.com/city/landon', options)
                .then(response => response.json())
                .then(response => { document.getElementById('data_h').innerHTML=response.main.humidity; document.getElementById('data_t').innerHTML=response.main.temp; })
                .catch(err => console.error(err));
        }
        setInterval(function ( ) {
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
    document.getElementById("moisture").innerHTML = this.responseText;
    }
    };
    xhttp.open("GET", "/moisture", true);
    xhttp.send();
    }, 1000 ) ;

    </script>
</body>

</html>
)rawliteral";

void notFound(AsyncWebServerRequest* request) {
  request->send(404, "text/plain", "Not found");
}

String processor(const String &var)
{
  // Serial.println(var);
  if (var == "SOIL")
  {
    return readsoilm();
  }
//  else if(var == "TEMPERATURE"){
//    return readDHTTemperature();
//  }
//  else if(var == "HUMIDITY"){
//    return readDHTHumidity();
//  }
  return String();
}

void setup() {
  Serial.begin(115200);
  pinMode(readADC,INPUT);
  pinMode(LEDPin, OUTPUT);
  pinMode(waterl,INPUT);
  pinMode(motor,OUTPUT);
  digitalWrite(LEDPin,HIGH);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Serial.println("WiFi Failed!");
    return;
  }
  Serial.println();
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
 
  
  // Send web page with input fields to client
 server.on("/", HTTP_GET, [](AsyncWebServerRequest* request) {
request->send_P(200, "text/html", index_html, processor);
});
server.on("/moisture", HTTP_GET, [](AsyncWebServerRequest* request) {
request->send_P(200, "text/plain", readsoilm().c_str());
});
 server.on("/off", HTTP_GET, [](AsyncWebServerRequest *request){
    digitalWrite(LEDPin, LOW);    
    request->send_P(200,  "text/html", index_html, processor);
  });

  // Send a GET request to <ESP_IP>/get?input1=<inputMessage>
  server.on("/get", HTTP_GET, [](AsyncWebServerRequest* request) {
    String inputMessage;
    String inputParam;
    String r="1";
    String t="2";
    String u="3";
    // GET input1 value on <ESP_IP>/get?input1=<inputMessage>
    if (request->hasParam(PARAM_INPUT_1)) {
      inputMessage = "1";
      inputParam = PARAM_INPUT_1;
     
    }
    // GET input2 value on <ESP_IP>/get?input2=<inputMessage>
    else if (request->hasParam(PARAM_INPUT_2)) {
      inputMessage = "2";
      inputParam = PARAM_INPUT_2;
      

    }
    // GET input3 value on <ESP_IP>/get?input3=<inputMessage>
    else if (request->hasParam(PARAM_INPUT_3)) {
      inputMessage = "3";
      inputParam = PARAM_INPUT_3;
     

    } else {
      inputMessage = "No message sent";
      inputParam = "none";
    }

    // Serial.println(inputMessage);
    if(r == inputMessage)
    {
       flag1=1;
       Serial.println(flag1);
    }
    else if(t == inputMessage)
    {
       flag1=2;
       Serial.println(flag1);
    }
    else if(u == inputMessage)
    {
       flag1=3;
       Serial.println(flag1);
    }
    request->send_P(200, "text/html", index_html);
  });

  server.onNotFound(notFound);
  server.begin();
  
}



void loop() {
 
  analog=0;
 

  if (flag1 == 1) {
     if (flag == 1)
 {  //analog=0;
    Serial.println("Saturated");
    digitalWrite(motor,LOW);
    //flag=0;
  }
  else if (flag == 2)
  { analog=100;
    Serial.println("Near Saturation");
    analogWrite(motor,analog);
    //flag = 0;
  }
  else if (flag == 3)
  { analog=190;
    Serial.println("Dry");
    analogWrite(motor,analog);
    //flag = 0;
  }
  else if (flag == 4)
  { analog =255;
    Serial.println("Very Dry");
    analogWrite(motor,analog);
    //flag = 0;
  }
    Serial.println("wheat");
  } 
  else if (flag1 == 2) {
       if (flag == 1)
 {  //analog=0;
    Serial.println("Saturated");
    digitalWrite(motor,LOW);
    //flag=0;
  }
  else if (flag == 2)
  { analog=100;
    Serial.println("Near Saturation");
    analogWrite(motor,analog);
    //flag = 0;
  }
  else if (flag == 3)
  { analog=190;
    Serial.println("Dry");
    analogWrite(motor,analog);
    //flag = 0;
  }
  else if (flag == 4)
  { analog =255;
    Serial.println("Very Dry");
    analogWrite(motor,analog);
    //flag = 0;
  }
   
    Serial.println("peanut");
  } else if (flag1 == 3) 
  { 
       if (flag == 1)
 {  //analog=0;
    Serial.println("Saturated");
    digitalWrite(motor,LOW);
    //flag=0;
  }
  else if (flag == 2)
  { analog=100;
    Serial.println("Near Saturation");
    analogWrite(motor,analog);
    //flag = 0;
  }
  else if (flag == 3)
  { analog=190;
    Serial.println("Dry");
    analogWrite(motor,analog);
    //flag = 0;
  }
  else if (flag == 4)
  { analog =255;
    Serial.println("Very Dry");
    analogWrite(motor,analog);
    //flag = 0;
  }
 
    Serial.println("cotton");
  }
}